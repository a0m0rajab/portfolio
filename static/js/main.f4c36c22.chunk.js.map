{"version":3,"sources":["logo.svg","images/chatBot.PNG","images/searchEngine.PNG","images/Turing.PNG","images/Visa.PNG","components/SocialMediaRow.jsx","components/header.jsx","components/Homepage.jsx","components/Portfolio.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SocialMediaRow","mystyle","padding","Grid","container","direction","justify","alignItems","style","borderColor","borderWidth","borderStyle","icon","iconColor","backgroundColor","iconSize","roundness","url","size","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","button","textDecoration","color","Header","classes","className","AppBar","position","background","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","component","Link","to","href","Homepage","document","src","logo","alt","heroContent","palette","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","footer","ChatBot","Turing","Visa","searchEngine","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4c36c22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatBot.a5fcf313.PNG\";","module.exports = __webpack_public_path__ + \"static/media/searchEngine.40e388af.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Turing.39a86c4c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Visa.48ec77c8.PNG\";","import React, { Component } from 'react';\r\nimport { SocialMediaIconsReact } from 'social-media-icons-react/dist/index';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class SocialMediaRow extends Component {\r\n    render() {\r\n        const mystyle = {\r\n            padding: \"0.3rem\",\r\n        };\r\n        return (\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <div style={mystyle} >\r\n                    <SocialMediaIconsReact borderColor=\"rgba(245,240,240,1)\" borderWidth=\"5\" borderStyle=\"solid\" icon=\"twitter\" iconColor=\"#61dafb\" backgroundColor=\"rgba(255,255,255,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://some-website.com/my-social-media-url\" size=\"50\" />\r\n                </div>\r\n                <div style={mystyle} >\r\n                    <SocialMediaIconsReact style={mystyle} borderColor=\"rgba(245,240,240,1)\" borderWidth=\"5\" borderStyle=\"solid\" icon=\"github\" iconColor=\"#61dafb\" backgroundColor=\"rgba(255,255,255,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://some-website.com/my-social-media-url\" size=\"50\" />\r\n                </div >\r\n                <div style={mystyle} >\r\n                    <SocialMediaIconsReact borderColor=\"rgba(245,240,240,1)\" borderWidth=\"5\" borderStyle=\"solid\" icon=\"linkedin\" iconColor=\"#61dafb\" backgroundColor=\"rgba(255,255,255,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://some-website.com/my-social-media-url\" size=\"50\" />\r\n                </div>\r\n                <div style={mystyle} >\r\n                    <SocialMediaIconsReact borderColor=\"rgba(245,240,240,1)\" borderWidth=\"5\" borderStyle=\"solid\" icon=\"facebook\" iconColor=\"#61dafb\" backgroundColor=\"rgba(255,255,255,1)\" iconSize=\"3\" roundness=\"50%\" url=\"https://some-website.com/my-social-media-url\" size=\"50\" />\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    button:{\r\n        textDecoration: 'none', color: 'white'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\nreturn (\r\n    <div className={classes.root}>\r\n<AppBar position=\"static\" style={{ background: '#282c34' }}>\r\n    <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            A.Rajab\r\n</Typography>\r\n       \r\n        <Button className={classes.button}   component={Link}  to='./' >\r\n        Home\r\n        </Button>\r\n        <Button className={classes.button}   component={Link}  to='./about' >\r\n        About\r\n        </Button>\r\n        <Button className={classes.button}  >\r\n        <a className={classes.button}   href=\"http://a0m0rajab.github.io/\">     CV</a>\r\n        </Button>\r\n        <Button className={classes.button}   component={Link}  to='./projects' >\r\n        Portfolio\r\n        </Button>\r\n      \r\n    </Toolbar>\r\n</AppBar>\r\n</div>\r\n);\r\n}","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\nimport {Link} from 'react-router-dom'\r\nimport SocialMediaRow from './SocialMediaRow'\r\nimport Header from './header'\r\n// #282c34 react background colour\r\n\r\nexport default class Homepage extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        document.title=\"A.Rajab :)\"\r\n        }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n            <header className=\"App-header\">\r\n            <Header/>\r\n\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              <p>\r\n               Abduurahman Rajab a front end developer, computer engineer and Human!\r\n              </p>  \r\n               <Link to='./about'   className=\"App-link\" >Want more?</Link>\r\n               <br/>\r\n                <SocialMediaRow/>\r\n            </header>\r\n\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport Header from './header'\r\nimport ChatBot from '../images/chatBot.PNG'\r\nimport searchEngine from '../images/searchEngine.PNG'\r\nimport Turing from '../images/Turing.PNG'\r\nimport Visa from '../images/Visa.PNG'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [\r\n  {id:1,\r\n  title: \"ChatBot — WitAi\",\r\n  info: \"A small chatbot used as demoe for a project that i was working on it!\",\r\n  demo: \"https://a0m0rajab.github.io/exercise/JSuniWork/ChatBot.html\",\r\n  link: ChatBot},\r\n\r\n  {id:2,\r\n    title: \"Turing simulation\",\r\n    info: \"A turing machine simulator used for educational purposes\",\r\n    demo: \"https://a0m0rajab.github.io/Automata/turing/abdurrahmanRajab_turingMachineSimulator.html\",\r\n  link:Turing}\r\n    ,\r\n  {id:3,\r\n    title: \"Visa application\",\r\n    info: \"A purpose to fix and redesgin the front page of the Ministry of Foreign Affairs\",\r\n    demo: \"https://a0m0rajab.github.io/VizeUygulamalari/  \",\r\n  link:Visa}\r\n    ,\r\n  {id:4,\r\n    title: \"Arabic Search Engine\",\r\n    info: \"An arabic search engine used for special purposes\",\r\n    demo: \"https://a0m0rajab.github.io/BahisQurani/finder\",\r\n  link:searchEngine}\r\n\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n     <Header/>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n        A few projects.\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              Hope you to enjoy checking them :)\r\n            </Typography>\r\n          \r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n              <Grid item key={card.id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image = {card.link}\r\n                    title={card.title}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.title}\r\n                    </Typography>\r\n                    <Typography>\r\n              {card.info}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => { window.open(card.demo);}}> \r\n                      Demo\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n     \r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Route, Switch ,   Link } from 'react-router-dom'\r\nimport Homepage from './components/Homepage'\r\nimport About from './components/About'\r\nimport Portfolio from './components/Portfolio'\r\n\r\n\r\n\r\nfunction App() {\r\n  document.title=\"A.Rajab :)\";\r\n    return (\r\n      <Homepage/>);\r\n{/* <Router>\r\n<Switch>\r\n  <Route\r\n    exact path='/'\r\n    component={Homepage}\r\n\r\n  />\r\n  <Route\r\n    exact path='/home'\r\n    component={Homepage}\r\n  />\r\n  <Route\r\n    exact path='/about'\r\n    component={About}\r\n  />\r\n  <Route\r\n    exact path='/projects'\r\n    component={Portfolio}\r\n  />\r\n  <Route\r\n    exact path='/contact'\r\n    // component={Contact}\r\n  />\r\n</Switch>\r\n</Router> */}\r\n    // );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}